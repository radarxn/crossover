package com.crossover.techtrial.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


/**
 * DailyElectricity is responsible for electricity generated by a Panel in one day.
 * 
 * @author Crossover
 *
 */

@Entity
@Table(name = "daily_electricity")
public class DailyElectricity implements Serializable {

  private static final long serialVersionUID = -575347909928592140L;
  
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  Long id;
  
  @ManyToOne
  @JoinColumn(name = "panel_id", referencedColumnName = "id")
  Panel panel;
  
  @Column(name = "date")
  LocalDate date;
  
  @Column(name = "sum")
  Long sum;
  
  @Column(name = "average")
  Double average;
  
  @Column(name = "min")
  Long min;
  
  @Column(name = "max")
  Long max;

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

	public Panel getPanel() {
		return panel;
	}

	public void setPanel(Panel panel) {
		this.panel = panel;
	}

	public LocalDate getDate() {
		return date;
	}

	public void setDate(LocalDate date) {
		this.date = date;
	}

	public Long getSum() {
		return sum;
	}

	public void setSum(Long sum) {
		this.sum = sum;
	}

	public Double getAverage() {
		return average;
	}

	public void setAverage(Double average) {
		this.average = average;
	}

	public Long getMin() {
		return min;
	}

	public void setMin(Long min) {
		this.min = min;
	}

	public Long getMax() {
		return max;
	}

	public void setMax(Long max) {
		this.max = max;
	}

  /* (non-Javadoc)
   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    result = prime * result + ((date == null) ? 0 : date.hashCode());
    return result;
  }

  /* (non-Javadoc)
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    DailyElectricity other = (DailyElectricity) obj;
    if (id == null) {
      if (other.id != null) {
        return false;
      }
    } else if (!id.equals(other.id)) {
      return false;
    }
    if (date == null) {
      if (other.date != null) {
        return false;
      }
    } else if (!date.equals(other.date)) {
      return false;
    }
    return true;
  }

  /* (non-Javadoc)
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {
    return "DailyElectricity [id=" + id + ", panel=" + panel + ", min="
        + min + ", max="+ max + ", sum="+ sum + ", avg="+ average + ", date=" + date + "]";
  }
  
  
  
}
